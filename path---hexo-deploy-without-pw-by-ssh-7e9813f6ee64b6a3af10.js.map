{"version":3,"sources":["webpack:///path---hexo-deploy-without-pw-by-ssh-7e9813f6ee64b6a3af10.js","webpack:///./.cache/json/hexo-deploy-without-pw-by-ssh.json"],"names":["webpackJsonp","544","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,uBAAAC,OAAA,kBAAyDC,gBAAmBC,GAAA,iJAAAC,KAAA,skMAAizHC,aAAymFL,MAAA,iCAAAM,KAAA,kBAAiEC,aAAgBC,KAAA,kCAAAC,UAAqDC,QAAUF,KAAA,uBAA6BH,aAAgBL,MAAA,kBAAyBW,MAASD,QAAUF,KAAA,mBAAyBH,aAAgBL,MAAA","file":"path---hexo-deploy-without-pw-by-ssh-7e9813f6ee64b6a3af10.js","sourcesContent":["webpackJsonp([41015452848413],{\n\n/***/ 544:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog - Jianhua Cheng\",\"author\":\"Jianhua Cheng\"}},\"markdownRemark\":{\"id\":\"/Users/chengjianhua/Documents/codes/chengjianhua.github.io/src/pages/hexo-deploy-without-pw-by-ssh/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>此篇博客日期 <code class=\\\"language-text\\\">2016-05-14</code>，使用 <code class=\\\"language-text\\\">hexo v0.2.0</code>。介绍清楚这个使用背景是因为网上的有些教程已经过时，至少当我完全按照那些步骤来设置的时候并没有成功。SSH 验证就是我们键入命令 <code class=\\\"language-text\\\">hexo deploy</code> 以后，当那些需要提交的内容显示完成过后会弹出的一个小窗口提示我们输入用户名、密码。我参考了网上的一些教程，现在给出完整可行的教程，let’s do it！</p>\\n<!-- more -->\\n<h2 id=\\\"生成-ssh-密钥\\\"><a href=\\\"#%E7%94%9F%E6%88%90-ssh-%E5%AF%86%E9%92%A5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>生成 SSH 密钥</h2>\\n<p>首先打开命令行工具，通常我们可以直接右键鼠标任意位置打开 <code class=\\\"language-text\\\">Git Bash Here</code>，然后输入以下命令</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">$ cd ~/.ssh\\n# Checks to see if there is a directory named &quot;.ssh&quot; in your user directory</code></pre>\\n      </div>\\n<p>使用 <code class=\\\"language-text\\\">ssh-keygen</code> 生成密钥</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;\\n# Creates a new ssh key using the provided email\\nGenerating public/private rsa key pair.\\nEnter file in which to save the key (/home/you/.ssh/id_rsa):</code></pre>\\n      </div>\\n<p>使用默认的文件名直接 enter，接下来显示如下</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">Enter passphrase (empty for no passphrase): [Type a passphrase]\\nEnter same passphrase again: [Type passphrase again]</code></pre>\\n      </div>\\n<p>按提示输入密码即可（简化流程的话在键入命令 <code class=\\\"language-text\\\">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code> 以后的三次提示输入都可以直接回车跳过）。</p>\\n<p>密钥生成成功</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">Your identification has been saved in /home/you/.ssh/id_rsa.\\nYour public key has been saved in /home/you/.ssh/id_rsa.pub.\\nThe key fingerprint is:\\n…………………此处是密钥内容…………………… your_email@example.com</code></pre>\\n      </div>\\n<h2 id=\\\"设置-github-项目的-deploy-keys\\\"><a href=\\\"#%E8%AE%BE%E7%BD%AE-github-%E9%A1%B9%E7%9B%AE%E7%9A%84-deploy-keys\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>设置 Github 项目的 Deploy keys</h2>\\n<p>可以选择是在用户设置中添加密钥（Settings —> SSH GPG keys）还是单个项目中添加密钥，在这里我就在我们的博客项目中添加密钥，此处以我的博客为例。在 <code class=\\\"language-text\\\">chengjianhua.github.io</code> 的首页菜单栏中点击 <strong>Settings —> Deploy keys —> Add deploy key</strong>，然后将生成的 <code class=\\\"language-text\\\">id_rsa.pub</code> 中的内容全选复制到 <strong>key</strong> 输入框中，然后点击 <strong>Add key</strong> 完成添加公钥。</p>\\n<p>接下来测试配置是否成功</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">$ ssh -T git@github.com</code></pre>\\n      </div>\\n<p>如果出现以下内容即表示配置完成并且成功！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">Hi username! You&#39;ve successfully authenticated, but GitHub does not\\nprovide shell access.</code></pre>\\n      </div>\\n<h2 id=\\\"设置博客的提交地址\\\"><a href=\\\"#%E8%AE%BE%E7%BD%AE%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%8F%90%E4%BA%A4%E5%9C%B0%E5%9D%80\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>设置博客的提交地址</h2>\\n<p>到了这一个步骤和大家在网上搜到的其他教程就不一样了，网上的这一步就是设置</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\"># 切入到包含 .git 文件夹的文件夹\\n$ cd .deploy/\\n\\n# 查看当前的传输协议\\n$ git remote -v\\n\\norigin  https://github.com/USERNAME/REPOSITORY.git (fetch)\\norigin  https://github.com/USERNAME/REPOSITORY.git (push)\\n\\n# 修改 https 协议为 ssh 协议\\n$ git remote set-url origin git@github.com:USERNAME/REPOSITORY2.git</code></pre>\\n      </div>\\n<p>但是我根据网上的并没有用。更别提我的 blog 文件夹中包含 <code class=\\\"language-text\\\">.git</code> 文件夹的文件夹（好绕啊……）名字是 <code class=\\\"language-text\\\">.deploy_git</code> 了。还有我输入 <code class=\\\"language-text\\\">$ git remote -v</code> 时的显示结果为空，我尝试过自己添加 <code class=\\\"language-text\\\">$ git remote add origin git@github.com:chengjianhua/chengjianhua.github.io.git</code>,然后 <code class=\\\"language-text\\\">$ hexo deploy</code> 还是需要输入密码。</p>\\n<p><strong>解决办法出来了！</strong></p>\\n<p>在 <code class=\\\"language-text\\\">hexo deploy</code> 的控制台输出结果中我看到了链接仍然是 <code class=\\\"language-text\\\">https</code> 的链接，这时我想到了 <code class=\\\"language-text\\\">hexo</code> 的配置文件 <code class=\\\"language-text\\\">_config.yml</code> 中的 <code class=\\\"language-text\\\">deploy</code> 属性。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\">deploy<span class=\\\"token operator\\\">:</span>\\n  type<span class=\\\"token operator\\\">:</span> git\\n  repo<span class=\\\"token operator\\\">:</span> git@github.com<span class=\\\"token operator\\\">:</span>chengjianhua/chengjianhua.github.io.git\\n  branch<span class=\\\"token operator\\\">:</span> master\\n</code></pre>\\n      </div>\\n<p>我将其中的 <code class=\\\"language-text\\\">repo</code>修改成了<code class=\\\"language-text\\\">git@github.com:chengjianhua/chengjianhua.github.io.git</code>，这个时候我再尝试了 <code class=\\\"language-text\\\">$ hexo deploy</code> 果然成功了，就不用输入密码了！</p>\\n<p>到此我的解决方法已经完成了，希望能帮到使用 <code class=\\\"language-text\\\">hexo</code> 的同学们~</p>\",\"frontmatter\":{\"title\":\"设置 SSH 使用 hexo deploy 时免输用户名密码\",\"date\":\"May 14, 2016\"}}},\"pathContext\":{\"slug\":\"/hexo-deploy-without-pw-by-ssh/\",\"previous\":{\"fields\":{\"slug\":\"/atom-custom-style/\"},\"frontmatter\":{\"title\":\"自定义Atom编辑器的样式\"}},\"next\":{\"fields\":{\"slug\":\"/react-context/\"},\"frontmatter\":{\"title\":\"React 中 context 的使用\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---hexo-deploy-without-pw-by-ssh-7e9813f6ee64b6a3af10.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog - Jianhua Cheng\",\"author\":\"Jianhua Cheng\"}},\"markdownRemark\":{\"id\":\"/Users/chengjianhua/Documents/codes/chengjianhua.github.io/src/pages/hexo-deploy-without-pw-by-ssh/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>此篇博客日期 <code class=\\\"language-text\\\">2016-05-14</code>，使用 <code class=\\\"language-text\\\">hexo v0.2.0</code>。介绍清楚这个使用背景是因为网上的有些教程已经过时，至少当我完全按照那些步骤来设置的时候并没有成功。SSH 验证就是我们键入命令 <code class=\\\"language-text\\\">hexo deploy</code> 以后，当那些需要提交的内容显示完成过后会弹出的一个小窗口提示我们输入用户名、密码。我参考了网上的一些教程，现在给出完整可行的教程，let’s do it！</p>\\n<!-- more -->\\n<h2 id=\\\"生成-ssh-密钥\\\"><a href=\\\"#%E7%94%9F%E6%88%90-ssh-%E5%AF%86%E9%92%A5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>生成 SSH 密钥</h2>\\n<p>首先打开命令行工具，通常我们可以直接右键鼠标任意位置打开 <code class=\\\"language-text\\\">Git Bash Here</code>，然后输入以下命令</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">$ cd ~/.ssh\\n# Checks to see if there is a directory named &quot;.ssh&quot; in your user directory</code></pre>\\n      </div>\\n<p>使用 <code class=\\\"language-text\\\">ssh-keygen</code> 生成密钥</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;\\n# Creates a new ssh key using the provided email\\nGenerating public/private rsa key pair.\\nEnter file in which to save the key (/home/you/.ssh/id_rsa):</code></pre>\\n      </div>\\n<p>使用默认的文件名直接 enter，接下来显示如下</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">Enter passphrase (empty for no passphrase): [Type a passphrase]\\nEnter same passphrase again: [Type passphrase again]</code></pre>\\n      </div>\\n<p>按提示输入密码即可（简化流程的话在键入命令 <code class=\\\"language-text\\\">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code> 以后的三次提示输入都可以直接回车跳过）。</p>\\n<p>密钥生成成功</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">Your identification has been saved in /home/you/.ssh/id_rsa.\\nYour public key has been saved in /home/you/.ssh/id_rsa.pub.\\nThe key fingerprint is:\\n…………………此处是密钥内容…………………… your_email@example.com</code></pre>\\n      </div>\\n<h2 id=\\\"设置-github-项目的-deploy-keys\\\"><a href=\\\"#%E8%AE%BE%E7%BD%AE-github-%E9%A1%B9%E7%9B%AE%E7%9A%84-deploy-keys\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>设置 Github 项目的 Deploy keys</h2>\\n<p>可以选择是在用户设置中添加密钥（Settings —> SSH GPG keys）还是单个项目中添加密钥，在这里我就在我们的博客项目中添加密钥，此处以我的博客为例。在 <code class=\\\"language-text\\\">chengjianhua.github.io</code> 的首页菜单栏中点击 <strong>Settings —> Deploy keys —> Add deploy key</strong>，然后将生成的 <code class=\\\"language-text\\\">id_rsa.pub</code> 中的内容全选复制到 <strong>key</strong> 输入框中，然后点击 <strong>Add key</strong> 完成添加公钥。</p>\\n<p>接下来测试配置是否成功</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">$ ssh -T git@github.com</code></pre>\\n      </div>\\n<p>如果出现以下内容即表示配置完成并且成功！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\">Hi username! You&#39;ve successfully authenticated, but GitHub does not\\nprovide shell access.</code></pre>\\n      </div>\\n<h2 id=\\\"设置博客的提交地址\\\"><a href=\\\"#%E8%AE%BE%E7%BD%AE%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%8F%90%E4%BA%A4%E5%9C%B0%E5%9D%80\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>设置博客的提交地址</h2>\\n<p>到了这一个步骤和大家在网上搜到的其他教程就不一样了，网上的这一步就是设置</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-cmd\\\"><code class=\\\"language-cmd\\\"># 切入到包含 .git 文件夹的文件夹\\n$ cd .deploy/\\n\\n# 查看当前的传输协议\\n$ git remote -v\\n\\norigin  https://github.com/USERNAME/REPOSITORY.git (fetch)\\norigin  https://github.com/USERNAME/REPOSITORY.git (push)\\n\\n# 修改 https 协议为 ssh 协议\\n$ git remote set-url origin git@github.com:USERNAME/REPOSITORY2.git</code></pre>\\n      </div>\\n<p>但是我根据网上的并没有用。更别提我的 blog 文件夹中包含 <code class=\\\"language-text\\\">.git</code> 文件夹的文件夹（好绕啊……）名字是 <code class=\\\"language-text\\\">.deploy_git</code> 了。还有我输入 <code class=\\\"language-text\\\">$ git remote -v</code> 时的显示结果为空，我尝试过自己添加 <code class=\\\"language-text\\\">$ git remote add origin git@github.com:chengjianhua/chengjianhua.github.io.git</code>,然后 <code class=\\\"language-text\\\">$ hexo deploy</code> 还是需要输入密码。</p>\\n<p><strong>解决办法出来了！</strong></p>\\n<p>在 <code class=\\\"language-text\\\">hexo deploy</code> 的控制台输出结果中我看到了链接仍然是 <code class=\\\"language-text\\\">https</code> 的链接，这时我想到了 <code class=\\\"language-text\\\">hexo</code> 的配置文件 <code class=\\\"language-text\\\">_config.yml</code> 中的 <code class=\\\"language-text\\\">deploy</code> 属性。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\">deploy<span class=\\\"token operator\\\">:</span>\\n  type<span class=\\\"token operator\\\">:</span> git\\n  repo<span class=\\\"token operator\\\">:</span> git@github.com<span class=\\\"token operator\\\">:</span>chengjianhua/chengjianhua.github.io.git\\n  branch<span class=\\\"token operator\\\">:</span> master\\n</code></pre>\\n      </div>\\n<p>我将其中的 <code class=\\\"language-text\\\">repo</code>修改成了<code class=\\\"language-text\\\">git@github.com:chengjianhua/chengjianhua.github.io.git</code>，这个时候我再尝试了 <code class=\\\"language-text\\\">$ hexo deploy</code> 果然成功了，就不用输入密码了！</p>\\n<p>到此我的解决方法已经完成了，希望能帮到使用 <code class=\\\"language-text\\\">hexo</code> 的同学们~</p>\",\"frontmatter\":{\"title\":\"设置 SSH 使用 hexo deploy 时免输用户名密码\",\"date\":\"May 14, 2016\"}}},\"pathContext\":{\"slug\":\"/hexo-deploy-without-pw-by-ssh/\",\"previous\":{\"fields\":{\"slug\":\"/atom-custom-style/\"},\"frontmatter\":{\"title\":\"自定义Atom编辑器的样式\"}},\"next\":{\"fields\":{\"slug\":\"/react-context/\"},\"frontmatter\":{\"title\":\"React 中 context 的使用\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/hexo-deploy-without-pw-by-ssh.json\n// module id = 544\n// module chunks = 41015452848413"],"sourceRoot":""}