{"version":3,"sources":["webpack:///path---customize-tag-of-jsp-0b70d7a079a717c69018.js","webpack:///./.cache/json/customize-tag-of-jsp.json"],"names":["webpackJsonp","527","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,uBAAAC,OAAA,kBAAyDC,gBAAmBC,GAAA,wIAAAC,KAAA,w7oBAAi1qBC,aAA0LL,MAAA,SAAAM,KAAA,oBAA2CC,aAAgBC,KAAA,yBAAAC,UAA4CC,QAAUF,KAAA,iCAAuCH,aAAgBL,MAAA,+BAAsCW,MAASD,QAAUF,KAAA,2BAAiCH,aAAgBL,MAAA","file":"path---customize-tag-of-jsp-0b70d7a079a717c69018.js","sourcesContent":["webpackJsonp([10396507487984],{\n\n/***/ 527:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog - Jianhua Cheng\",\"author\":\"Jianhua Cheng\"}},\"markdownRemark\":{\"id\":\"/Users/chengjianhua/Documents/codes/chengjianhua.github.io/src/pages/customize-tag-of-jsp/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>定制标签的目的是分离表现逻辑和业务逻辑，可以在 JSP 页面编写中尽量不出现<code class=\\\"language-text\\\">scriptlet</code>，而且可以根据自己想要的功能定制属于自己想要的标签，完成特定的功能。</p>\\n<p>这里只讲在 JSP2.0 之后添加的一个用于编写定制标签的接口—— <code class=\\\"language-text\\\">SimpleTag</code> ，这个接口实现简单，效果也不错。</p>\\n<p><code class=\\\"language-text\\\">SimpleTag</code>接口位于<code class=\\\"language-text\\\">javax.servlet.jsp.tagext</code>中，实现了该接口的标签处理器称作简单的标签处理器。<code class=\\\"language-text\\\">SimpleTag</code>接口中只有一个方法：<code class=\\\"language-text\\\">doTag()</code>，并且在标签调用时只执行一次。业务逻辑及主题操作代码都要在这里编写。</p>\\n<hr>\\n<h3>一个简单的标签处处理器的生命周期如下：</h3>\\n<!-- more -->\\n<h4>JSP 容器通过调用其无参构造函数，创建一个简单标签处理器实例。因此，简单的处理器必须有一个无参构造器。</h4>\\n<h4>JSP 容器调用<code class=\\\"language-text\\\">setJspCOntext</code>方法，同时传递一个<code class=\\\"language-text\\\">JspContext</code>对象。<code class=\\\"language-text\\\">JspContext</code>最重要的方法是<code class=\\\"language-text\\\">getOut</code>，它返回一个<code class=\\\"language-text\\\">JspWriter</code>，用于将响应发送到客户端。<code class=\\\"language-text\\\">setJspContext</code>方法的签名如下：</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> setJspContext <span class=\\\"token punctuation\\\">(</span>JspContext jspContext<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>大多数时候,需要将传进来的<code class=\\\"language-text\\\">JspContext</code>对象赋给一个类级变量，便于后续使用。</p>\\n<h4>如果表示标签处理器的定制标签是嵌套在另一个标签中的，JSP 容器就会调用<code class=\\\"language-text\\\">setParent</code>方法。该方法的签名如下：</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setParent</span><span class=\\\"token punctuation\\\">(</span>JspTag parent<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h4>JSP 容器为该标签定义的每个属性都调用设置方法（Setters）</h4>\\n<h4>如果标签中有主体内容，JSP 将调用<code class=\\\"language-text\\\">SimpleTag</code>接口中的<code class=\\\"language-text\\\">setJspBody</code>方法，将主体内容作为<code class=\\\"language-text\\\">JspFragment</code>传递。如果没有主体内容，JSP 容器将不会调用这个方法。</h4>\\n<h4>JSP 容器调用<code class=\\\"language-text\\\">doTag</code>方法。所有变量在<code class=\\\"language-text\\\">doTag</code>方法返回时同步。</h4>\\n<hr>\\n<p><strong>注：</strong><code class=\\\"language-text\\\">javax.servlet.jsp.tagext</code>包中也含有<code class=\\\"language-text\\\">SimpleTag</code>接口的一个支持类：<code class=\\\"language-text\\\">SimpleTagSupport</code>。<code class=\\\"language-text\\\">SimpleTagSupport</code>为<code class=\\\"language-text\\\">SimpleTag</code>接口中的所有方法都提供了默认实现（类似于适配器），我们可以继承它来编写一个简单的标签处理器。当 JSP 容器调用<code class=\\\"language-text\\\">SimpleTag</code>接口的<code class=\\\"language-text\\\">setJspContext</code>方法时，<code class=\\\"language-text\\\">SimpleTagSupport</code>类中的<code class=\\\"language-text\\\">getJspContext</code>方法将返回 JSP 容器传递的<code class=\\\"language-text\\\">JspContext</code>实例。</p>\\n<hr>\\n<h3>编写处理器</h3>\\n<p><strong>为了编译标签处理器，需要在构建路径中包含<code class=\\\"language-text\\\">Servlet API</code> 和<code class=\\\"language-text\\\">JSP API</code>类包。例如<code class=\\\"language-text\\\">Tomcat</code>的<code class=\\\"language-text\\\">servlet-api.jar</code>文件和<code class=\\\"language-text\\\">jsp-api.jar</code>文件。</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">import</span> java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span>IOException<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>JspContext<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>JspException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>tagext<span class=\\\"token punctuation\\\">.</span>JspFragment<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>tagext<span class=\\\"token punctuation\\\">.</span>JspTag<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>tagext<span class=\\\"token punctuation\\\">.</span>SimpleTag<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyFirstTag</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">SimpleTag</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n\\tJspContext jspContext<span class=\\\"token punctuation\\\">;</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">doTag</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> JspException<span class=\\\"token punctuation\\\">,</span> IOException <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"doTag\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjspContext<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOut</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"This is my first tag.\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> JspTag <span class=\\\"token function\\\">getParent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"getParent\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token keyword\\\">return</span> null<span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setJspBody</span><span class=\\\"token punctuation\\\">(</span>JspFragment body<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"setJspBody\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setJspContext</span><span class=\\\"token punctuation\\\">(</span>JspContext jspContext<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"getJspContext\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>jspContext <span class=\\\"token operator\\\">=</span> jspContext<span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setParent</span><span class=\\\"token punctuation\\\">(</span>JspTag parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"setParent\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">MyFIrstTag</code>类有一个类型为<code class=\\\"language-text\\\">JspContext</code>的<code class=\\\"language-text\\\">jspContext</code>变量。<code class=\\\"language-text\\\">setJspContext</code>方法将它从 JSP 容器接收到的<code class=\\\"language-text\\\">JspContext</code>赋给这个变量。<code class=\\\"language-text\\\">doTag</code>方法利用<code class=\\\"language-text\\\">JspContext</code>获得一个<code class=\\\"language-text\\\">JspWriter</code>。然后调用<code class=\\\"language-text\\\">JspWriter</code>的<code class=\\\"language-text\\\">print</code>方法，输出<em>This is my first tag.</em></p>\\n<h3>注册标签</h3>\\n<p>用一个以<code class=\\\"language-text\\\">.tld</code>为扩展名的 XML 文件描述标签处理器。以下示例<code class=\\\"language-text\\\">mytags.tld</code>：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-xml\\\"><code class=\\\"language-xml\\\"><span class=\\\"token prolog\\\">&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>taglib</span> <span class=\\\"token attr-name\\\">xmlns</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://java.sun.com/xml/ns/j2ee<span class=\\\"token punctuation\\\">\\\"</span></span>\\n    <span class=\\\"token attr-name\\\"><span class=\\\"token namespace\\\">xmlns:</span>xsi</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\\\"token punctuation\\\">\\\"</span></span>\\n    <span class=\\\"token attr-name\\\"><span class=\\\"token namespace\\\">xsi:</span>schemaLocation</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd<span class=\\\"token punctuation\\\">\\\"</span></span>\\n    <span class=\\\"token attr-name\\\">version</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>2.1<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>description</span><span class=\\\"token punctuation\\\">></span></span>\\n         Simple tag examples\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>description</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tlib-version</span><span class=\\\"token punctuation\\\">></span></span>1.0<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tlib-version</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>short-name</span><span class=\\\"token punctuation\\\">></span></span>My First Taglib Example<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>short-name</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>firstTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>customtag.MyFirstTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>empty<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>dataFormatter<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>customtag.DataFormatterTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>empty<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>header<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>required</span><span class=\\\"token punctuation\\\">></span></span>true<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>required</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>items<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>required</span><span class=\\\"token punctuation\\\">></span></span>true<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>required</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>select<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>customtag.SelectElementTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>scriptless<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>taglib</span><span class=\\\"token punctuation\\\">></span></span>\\n</code></pre>\\n      </div>\\n<p>标签类库描述符中的主要元素是<code class=\\\"language-text\\\">tag</code>，它用来描述标签，其中包含一个<code class=\\\"language-text\\\">name</code>元素和一个<code class=\\\"language-text\\\">tag--class</code>元素。<code class=\\\"language-text\\\">name</code>用于给该标签命名。<code class=\\\"language-text\\\">tag-class</code>用于指定标签处理器的全类名。一个<code class=\\\"language-text\\\">.tld</code>文件中可以包含多个<code class=\\\"language-text\\\">tag</code>元素。\\n<code class=\\\"language-text\\\">description</code>用于描述<code class=\\\"language-text\\\">tag</code>元素。<code class=\\\"language-text\\\">short-name</code>为标签的简称。<code class=\\\"language-text\\\">tlib-version</code>元素设置定制标签的版本。</p>\\n<h3>使用标签</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\">&lt;%@ taglib uri=\\\"WEB-INF/mytags.tld\\\" prefix=\\\"easy\\\">\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>测试我的第一个标签<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\nHello!<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span><span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token namespace\\\">easy:</span>firstTag</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token namespace\\\">easy:</span>firstTag</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n</code></pre>\\n      </div>\\n<p>在控制台上将显示：</p>\\n<p><em>setJspContext</em></p>\\n<p><em>doTag</em></p>\",\"frontmatter\":{\"title\":\"编写定制标签\",\"date\":\"March 24, 2016\"}}},\"pathContext\":{\"slug\":\"/customize-tag-of-jsp/\",\"previous\":{\"fields\":{\"slug\":\"/exists-compareTo-not-exists/\"},\"frontmatter\":{\"title\":\"exists 与 not exists 的概念与用法\"}},\"next\":{\"fields\":{\"slug\":\"/web-full-stack-review/\"},\"frontmatter\":{\"title\":\"WEB 全栈的学习\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---customize-tag-of-jsp-0b70d7a079a717c69018.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog - Jianhua Cheng\",\"author\":\"Jianhua Cheng\"}},\"markdownRemark\":{\"id\":\"/Users/chengjianhua/Documents/codes/chengjianhua.github.io/src/pages/customize-tag-of-jsp/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>定制标签的目的是分离表现逻辑和业务逻辑，可以在 JSP 页面编写中尽量不出现<code class=\\\"language-text\\\">scriptlet</code>，而且可以根据自己想要的功能定制属于自己想要的标签，完成特定的功能。</p>\\n<p>这里只讲在 JSP2.0 之后添加的一个用于编写定制标签的接口—— <code class=\\\"language-text\\\">SimpleTag</code> ，这个接口实现简单，效果也不错。</p>\\n<p><code class=\\\"language-text\\\">SimpleTag</code>接口位于<code class=\\\"language-text\\\">javax.servlet.jsp.tagext</code>中，实现了该接口的标签处理器称作简单的标签处理器。<code class=\\\"language-text\\\">SimpleTag</code>接口中只有一个方法：<code class=\\\"language-text\\\">doTag()</code>，并且在标签调用时只执行一次。业务逻辑及主题操作代码都要在这里编写。</p>\\n<hr>\\n<h3>一个简单的标签处处理器的生命周期如下：</h3>\\n<!-- more -->\\n<h4>JSP 容器通过调用其无参构造函数，创建一个简单标签处理器实例。因此，简单的处理器必须有一个无参构造器。</h4>\\n<h4>JSP 容器调用<code class=\\\"language-text\\\">setJspCOntext</code>方法，同时传递一个<code class=\\\"language-text\\\">JspContext</code>对象。<code class=\\\"language-text\\\">JspContext</code>最重要的方法是<code class=\\\"language-text\\\">getOut</code>，它返回一个<code class=\\\"language-text\\\">JspWriter</code>，用于将响应发送到客户端。<code class=\\\"language-text\\\">setJspContext</code>方法的签名如下：</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> setJspContext <span class=\\\"token punctuation\\\">(</span>JspContext jspContext<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>大多数时候,需要将传进来的<code class=\\\"language-text\\\">JspContext</code>对象赋给一个类级变量，便于后续使用。</p>\\n<h4>如果表示标签处理器的定制标签是嵌套在另一个标签中的，JSP 容器就会调用<code class=\\\"language-text\\\">setParent</code>方法。该方法的签名如下：</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setParent</span><span class=\\\"token punctuation\\\">(</span>JspTag parent<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h4>JSP 容器为该标签定义的每个属性都调用设置方法（Setters）</h4>\\n<h4>如果标签中有主体内容，JSP 将调用<code class=\\\"language-text\\\">SimpleTag</code>接口中的<code class=\\\"language-text\\\">setJspBody</code>方法，将主体内容作为<code class=\\\"language-text\\\">JspFragment</code>传递。如果没有主体内容，JSP 容器将不会调用这个方法。</h4>\\n<h4>JSP 容器调用<code class=\\\"language-text\\\">doTag</code>方法。所有变量在<code class=\\\"language-text\\\">doTag</code>方法返回时同步。</h4>\\n<hr>\\n<p><strong>注：</strong><code class=\\\"language-text\\\">javax.servlet.jsp.tagext</code>包中也含有<code class=\\\"language-text\\\">SimpleTag</code>接口的一个支持类：<code class=\\\"language-text\\\">SimpleTagSupport</code>。<code class=\\\"language-text\\\">SimpleTagSupport</code>为<code class=\\\"language-text\\\">SimpleTag</code>接口中的所有方法都提供了默认实现（类似于适配器），我们可以继承它来编写一个简单的标签处理器。当 JSP 容器调用<code class=\\\"language-text\\\">SimpleTag</code>接口的<code class=\\\"language-text\\\">setJspContext</code>方法时，<code class=\\\"language-text\\\">SimpleTagSupport</code>类中的<code class=\\\"language-text\\\">getJspContext</code>方法将返回 JSP 容器传递的<code class=\\\"language-text\\\">JspContext</code>实例。</p>\\n<hr>\\n<h3>编写处理器</h3>\\n<p><strong>为了编译标签处理器，需要在构建路径中包含<code class=\\\"language-text\\\">Servlet API</code> 和<code class=\\\"language-text\\\">JSP API</code>类包。例如<code class=\\\"language-text\\\">Tomcat</code>的<code class=\\\"language-text\\\">servlet-api.jar</code>文件和<code class=\\\"language-text\\\">jsp-api.jar</code>文件。</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">import</span> java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span>IOException<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>JspContext<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>JspException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>tagext<span class=\\\"token punctuation\\\">.</span>JspFragment<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>tagext<span class=\\\"token punctuation\\\">.</span>JspTag<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> javax<span class=\\\"token punctuation\\\">.</span>servlet<span class=\\\"token punctuation\\\">.</span>jsp<span class=\\\"token punctuation\\\">.</span>tagext<span class=\\\"token punctuation\\\">.</span>SimpleTag<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyFirstTag</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">SimpleTag</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n\\tJspContext jspContext<span class=\\\"token punctuation\\\">;</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">doTag</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> JspException<span class=\\\"token punctuation\\\">,</span> IOException <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"doTag\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjspContext<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOut</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"This is my first tag.\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> JspTag <span class=\\\"token function\\\">getParent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"getParent\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token keyword\\\">return</span> null<span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setJspBody</span><span class=\\\"token punctuation\\\">(</span>JspFragment body<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"setJspBody\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setJspContext</span><span class=\\\"token punctuation\\\">(</span>JspContext jspContext<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"getJspContext\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>jspContext <span class=\\\"token operator\\\">=</span> jspContext<span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">setParent</span><span class=\\\"token punctuation\\\">(</span>JspTag parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"setParent\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">MyFIrstTag</code>类有一个类型为<code class=\\\"language-text\\\">JspContext</code>的<code class=\\\"language-text\\\">jspContext</code>变量。<code class=\\\"language-text\\\">setJspContext</code>方法将它从 JSP 容器接收到的<code class=\\\"language-text\\\">JspContext</code>赋给这个变量。<code class=\\\"language-text\\\">doTag</code>方法利用<code class=\\\"language-text\\\">JspContext</code>获得一个<code class=\\\"language-text\\\">JspWriter</code>。然后调用<code class=\\\"language-text\\\">JspWriter</code>的<code class=\\\"language-text\\\">print</code>方法，输出<em>This is my first tag.</em></p>\\n<h3>注册标签</h3>\\n<p>用一个以<code class=\\\"language-text\\\">.tld</code>为扩展名的 XML 文件描述标签处理器。以下示例<code class=\\\"language-text\\\">mytags.tld</code>：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-xml\\\"><code class=\\\"language-xml\\\"><span class=\\\"token prolog\\\">&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>taglib</span> <span class=\\\"token attr-name\\\">xmlns</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://java.sun.com/xml/ns/j2ee<span class=\\\"token punctuation\\\">\\\"</span></span>\\n    <span class=\\\"token attr-name\\\"><span class=\\\"token namespace\\\">xmlns:</span>xsi</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\\\"token punctuation\\\">\\\"</span></span>\\n    <span class=\\\"token attr-name\\\"><span class=\\\"token namespace\\\">xsi:</span>schemaLocation</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd<span class=\\\"token punctuation\\\">\\\"</span></span>\\n    <span class=\\\"token attr-name\\\">version</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>2.1<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>description</span><span class=\\\"token punctuation\\\">></span></span>\\n         Simple tag examples\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>description</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tlib-version</span><span class=\\\"token punctuation\\\">></span></span>1.0<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tlib-version</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>short-name</span><span class=\\\"token punctuation\\\">></span></span>My First Taglib Example<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>short-name</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>firstTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>customtag.MyFirstTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>empty<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>dataFormatter<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>customtag.DataFormatterTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>empty<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>header<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>required</span><span class=\\\"token punctuation\\\">></span></span>true<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>required</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>items<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>required</span><span class=\\\"token punctuation\\\">></span></span>true<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>required</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>attribute</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>name</span><span class=\\\"token punctuation\\\">></span></span>select<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>name</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>customtag.SelectElementTag<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag-class</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>scriptless<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body-content</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>tag</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>taglib</span><span class=\\\"token punctuation\\\">></span></span>\\n</code></pre>\\n      </div>\\n<p>标签类库描述符中的主要元素是<code class=\\\"language-text\\\">tag</code>，它用来描述标签，其中包含一个<code class=\\\"language-text\\\">name</code>元素和一个<code class=\\\"language-text\\\">tag--class</code>元素。<code class=\\\"language-text\\\">name</code>用于给该标签命名。<code class=\\\"language-text\\\">tag-class</code>用于指定标签处理器的全类名。一个<code class=\\\"language-text\\\">.tld</code>文件中可以包含多个<code class=\\\"language-text\\\">tag</code>元素。\\n<code class=\\\"language-text\\\">description</code>用于描述<code class=\\\"language-text\\\">tag</code>元素。<code class=\\\"language-text\\\">short-name</code>为标签的简称。<code class=\\\"language-text\\\">tlib-version</code>元素设置定制标签的版本。</p>\\n<h3>使用标签</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\">&lt;%@ taglib uri=\\\"WEB-INF/mytags.tld\\\" prefix=\\\"easy\\\">\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>测试我的第一个标签<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\nHello!<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span><span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token namespace\\\">easy:</span>firstTag</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token namespace\\\">easy:</span>firstTag</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n</code></pre>\\n      </div>\\n<p>在控制台上将显示：</p>\\n<p><em>setJspContext</em></p>\\n<p><em>doTag</em></p>\",\"frontmatter\":{\"title\":\"编写定制标签\",\"date\":\"March 24, 2016\"}}},\"pathContext\":{\"slug\":\"/customize-tag-of-jsp/\",\"previous\":{\"fields\":{\"slug\":\"/exists-compareTo-not-exists/\"},\"frontmatter\":{\"title\":\"exists 与 not exists 的概念与用法\"}},\"next\":{\"fields\":{\"slug\":\"/web-full-stack-review/\"},\"frontmatter\":{\"title\":\"WEB 全栈的学习\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/customize-tag-of-jsp.json\n// module id = 527\n// module chunks = 10396507487984"],"sourceRoot":""}